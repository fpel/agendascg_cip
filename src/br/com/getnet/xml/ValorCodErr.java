//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.09 at 11:28:55 AM BRST 
//


package br.com.getnet.xml;

import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;


/**
 * 
 *         
 * <pre>
 * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;cat:InfTipo xmlns:cat="http://www.cip-bancos.org.br/catalogomsg" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;&lt;cat:DescricaoTipo&gt;
 *             Valor. Até dezessete inteiros e dois decimais e sinalizado.
 *             Para valores menores que zero, o valor sera precedido pelo sinal '-'.
 *             Exemplo: para 20 negativo informe -20. Deve ser informado o ponto separador caso tenha decimais.
 *             Exemplo: para R$100,00 informe 100; para R$100,10 informe 100.1;
 *             para R$100,11 informe 100.11; para R$100,11 negativo informe -100.11
 *           &lt;/cat:DescricaoTipo&gt;
 *         &lt;/cat:InfTipo&gt;
 * </pre>
 * 
 *       
 * 
 * <p>Java class for ValorCodErr complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ValorCodErr">
 *   &lt;simpleContent>
 *     &lt;extension base="&lt;http://www.cip-bancos.org.br/ARQ/ASCG026.xsd>Valor">
 *       &lt;attribute name="CodErro" type="{http://www.cip-bancos.org.br/ARQ/ASCG026.xsd}CodErro" />
 *     &lt;/extension>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ValorCodErr", propOrder = {
    "value"
})
public class ValorCodErr {

    @XmlValue
    protected BigDecimal value;
    @XmlAttribute(name = "CodErro")
    protected String codErro;

    /**
     * 
     *         Valor. Até dezessete inteiros e dois decimais e sinalizado.
     *         Para valores menores que zero, o valor sera precedido pelo sinal '-'.
     *         Exemplo: para 20 negativo informe -20. Deve ser informado o ponto separador caso tenha decimais.
     *         Exemplo: para R$100,00 informe 100; para R$100,10 informe 100.1;
     *         para R$100,11 informe 100.11; para R$100,11 negativo informe -100.11
     *       
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setValue(BigDecimal value) {
        this.value = value;
    }

    /**
     * Gets the value of the codErro property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCodErro() {
        return codErro;
    }

    /**
     * Sets the value of the codErro property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCodErro(String value) {
        this.codErro = value;
    }

}
